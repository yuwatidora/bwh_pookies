import type { ClerkOptions, DisplayConfigResource } from '@clerk/types';
import type { ParsedQs } from 'qs';
type PickRedirectionUrlKey = 'afterSignUpUrl' | 'afterSignInUrl' | 'signInUrl' | 'signUpUrl';
type PickRedirectionOptions = {
    queryParams?: ParsedQs;
    displayConfig?: DisplayConfigResource;
    options?: ClerkOptions;
    ctx?: any;
};
/**
 *
 * pickRedirectionProp(key, options, accessRedirectUrl)
 *
 * Retrieve auth redirect props passed through querystring parameters, component props, ClerkProvider props
 * or display config settings.
 *
 * The priority is:
 * 1. Querystring parameters
 * 2. ClerkJS component props
 * 3. ClerkProvider props
 * 4. Display configuration payload
 */
export declare const pickRedirectionProp: (key: PickRedirectionUrlKey, { ctx, queryParams, displayConfig, options }: PickRedirectionOptions, accessRedirectUrl?: boolean) => string;
interface BuildAuthQueryStringArgs {
    afterSignInUrl?: string;
    afterSignUpUrl?: string;
    displayConfig: DisplayConfigResource;
}
export declare const buildAuthQueryString: (data: BuildAuthQueryStringArgs) => string | null;
export {};
