{"version":3,"sources":["../src/ClerkProvider.tsx"],"sourcesContent":["/* eslint-disable turbo/no-undeclared-env-vars */\nimport './polyfills';\n\nimport type { ClerkProviderProps as ClerkReactProviderProps } from '@clerk/clerk-react';\nimport { __internal__setErrorThrowerOptions, ClerkProvider as ClerkReactProvider } from '@clerk/clerk-react';\nimport { deprecated } from '@clerk/shared/deprecated';\nimport React from 'react';\n\nimport type { TokenCache } from './cache';\nimport { MemoryTokenCache } from './cache';\nimport { isReactNative } from './runtime';\nimport { buildClerk } from './singleton';\n\n__internal__setErrorThrowerOptions({\n  packageName: '@clerk/expo',\n});\n\nexport type ClerkProviderProps = ClerkReactProviderProps & {\n  tokenCache?: TokenCache;\n};\n\nexport function ClerkProvider(props: ClerkProviderProps): JSX.Element {\n  const { children, tokenCache = MemoryTokenCache, frontendApi, publishableKey, ...rest } = props;\n  const key =\n    publishableKey || process.env.CLERK_PUBLISHABLE_KEY || frontendApi || process.env.CLERK_FRONTEND_API || '';\n\n  if (process.env.CLERK_FRONTEND_API) {\n    deprecated('CLERK_FRONTEND_API', 'Use `CLERK_PUBLISHABLE_KEY` instead.');\n  }\n\n  return (\n    //@ts-expect-error\n    <ClerkReactProvider\n      // Force reset the state when the provided key changes, this ensures that the provider does not retain stale state. See JS-598 for additional context.\n      key={key}\n      {...rest}\n      Clerk={buildClerk({ key, tokenCache })}\n      standardBrowser={!isReactNative()}\n    >\n      {children}\n    </ClerkReactProvider>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,uBAAO;AAGP,yBAAwF;AACxF,wBAA2B;AAC3B,mBAAkB;AAGlB,mBAAiC;AACjC,qBAA8B;AAC9B,uBAA2B;AAAA,IAE3B,uDAAmC;AAAA,EACjC,aAAa;AACf,CAAC;AAMM,SAAS,cAAc,OAAwC;AACpE,QAAM,EAAE,UAAU,aAAa,+BAAkB,aAAa,gBAAgB,GAAG,KAAK,IAAI;AAC1F,QAAM,MACJ,kBAAkB,QAAQ,IAAI,yBAAyB,eAAe,QAAQ,IAAI,sBAAsB;AAE1G,MAAI,QAAQ,IAAI,oBAAoB;AAClC,sCAAW,sBAAsB,sCAAsC;AAAA,EACzE;AAEA;AAAA;AAAA,IAEE,6BAAAA,QAAA;AAAA,MAAC,mBAAAC;AAAA,MAAA;AAAA,QAEC;AAAA,QACC,GAAG;AAAA,QACJ,WAAO,6BAAW,EAAE,KAAK,WAAW,CAAC;AAAA,QACrC,iBAAiB,KAAC,8BAAc;AAAA;AAAA,MAE/B;AAAA,IACH;AAAA;AAEJ;","names":["React","ClerkReactProvider"]}