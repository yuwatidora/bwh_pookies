import type { OAuthStrategy, SetActive, SignInResource, SignUpResource } from '@clerk/types';
import * as WebBrowser from 'expo-web-browser';
export type UseOAuthFlowParams = {
    strategy: OAuthStrategy;
    redirectUrl?: string;
    unsafeMetadata?: SignUpUnsafeMetadata;
};
export type StartOAuthFlowParams = {
    redirectUrl?: string;
    unsafeMetadata?: SignUpUnsafeMetadata;
};
export type StartOAuthFlowReturnType = {
    createdSessionId: string;
    setActive?: SetActive;
    signIn?: SignInResource;
    signUp?: SignUpResource;
    authSessionResult?: WebBrowser.WebBrowserAuthSessionResult;
};
export declare function useOAuth(useOAuthParams: UseOAuthFlowParams): {
    startOAuthFlow: (startOAuthFlowParams?: StartOAuthFlowParams) => Promise<StartOAuthFlowReturnType>;
};
//# sourceMappingURL=useOAuth.d.ts.map